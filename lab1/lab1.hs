-- Лабораторна робота №1
-- студента групи АнД-31
-- Лаврія Руслана
-- Варіант №6

-- Завдання 1. Створити список типу [(Integer, (Char, [Bool]))]
-- Дані команди потрібно ввести в терміналі ghci 
-- [(34, ('a', [True, False, False]))]
-- :t it
-- Результат буде 
-- it :: Num a => [(a, (Char, [Bool]))]

-- Завдання 2. Створити функцію 
-- Функція визначає чи одне коло повністю поміститься в іншому.
-- Кожне коло задається координатами центра та радіусом.
-- Для вирішення цьої задачі з математичної точку зору я вивів формулу
-- sqrt((x2-x1)^2+(y2-y1)^2+r1)<=r2 що дає нам дослідити чи коло 1 з координатами
-- x1, y1 та радіусом r1 входить в коло 2 - x2,y2,r2
-- Для уникнення кореня я вивів формулу (x2-x1)^2+(y2-y1)^2<=(r2-r1)^2 яка
-- дає можливість досліти чи коло 1 входить у коло 2, і чи коло 2 входить у коло 1
-- P.S. sqrt((x2-x1)^2+(y2-y1)^2) - формула довжини відрізка на площині
-- а) як один кортеж
function1 :: (Integer, Integer, Integer, Integer, Integer, Integer) -> Bool
function1 (x1, y1, r1, x2, y2, r2) = (x2-x1)^2+(y2-y1)^2<=(r2-r1)^2
-- б) без використання кортежів чи списків
function2 :: Integer -> Integer -> Integer -> Integer -> Integer -> Integer -> Bool
function2 x1 y1 r1 x2 y2 r2 = (x2-x1)^2+(y2-y1)^2<=(r2-r1)^2
-- Для запуску коду потрібно ввести:
-- ghci
-- load: lab1//lab1.hs
-- function1 0 0 9 3 4 3
--True
-- function2 (3, 4, 9, 0, 0, 3)
--True
-- function1 0 0 3 3 4 3
--False

-- У разі виникнення проблем типу: Variable not in scope можна використати 
-- схему
-- :{
-- код
-- :}
-- і написати код у самому ghci

-- Висновок: в ході виконання лабораторної роботи я ознайомився з мовою Haskell,
-- його синтаксисом, командами, ghci, а також на прикладі зробив вираз з кортежами і списками
-- та створив функції з кортежом і без кортежу.